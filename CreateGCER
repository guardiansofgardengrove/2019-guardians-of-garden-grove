#include <kipr/botball.h>

int main()
{
    //intro
    create_connect();
    // REFER TO THESE NUMBERS IF A CORD IS UMPLUGED //
    int frontArm = 1;
    int backArm = 0;
    int up = 0;
    int down = 1950;
    int lightSensor = 1;
    int leftLineSensor = 0;
    int rightLineSensor = 2;
    int buldingSensor = 3;
    int timer = 0;
    int i;
    msleep(2000); //get away from arms time
    set_servo_position(frontArm, 1790);
    set_servo_position(backArm, 0);
	printf("Create Batter Power Before Run: %d",get_create_battery_charge());
    //WAIT FOR LIGHT NEEDS TO BE ADDED HERE LATER
    enable_servos();
    shut_down_in(119);
    
    //programing info;
    
    //part 1: sweep the center line without people
    
    //get out of the starting box
    create_drive_direct(-100,-100);
    msleep(1000);
    create_stop();
	create_drive_direct(300,300);
    msleep(750);
    create_stop();

    //approach the start of the line
    create_spin_CW(200);
    msleep(960);
    create_stop();
    
    //drive paralel to the starting line
    create_drive_direct(300,300);
    msleep(2400);
    create_stop();
    
    //turn to face of the line
	create_spin_CW(200);
    msleep(960);
    create_stop();
    
    //check the gray and black line is passed before moving a bit farther to turn
    while (analog(rightLineSensor) < 1800){
        create_drive_direct(-100,-100);
    }
    create_stop();
    msleep(500);
	create_drive_direct(-100,-100);
    msleep(1250);
    create_stop();
	
    //turn to prep for the line and camera code
	create_spin_CCW(200);
    msleep(960);
    create_stop();
    
    //camera line follow
    set_servo_position(backArm,1900);
    msleep(500);
    while (timer < 200){ //to change time, add two zeros to however many seconds you want it to double line follow
        if (analog(leftLineSensor) > 1800 && analog(rightLineSensor) > 1800){
            create_drive_direct(-250,-250);
            msleep(10);
            timer = timer + 1;
        }
        else if (analog(leftLineSensor) > 1800 && analog(rightLineSensor) < 1800){
            create_drive_direct(0,-250);
            msleep(10);
            timer = timer + .75;
    	}
    	else if (analog(leftLineSensor) < 1800 && analog(rightLineSensor) > 1800) {
            create_drive_direct(-250,0);
            msleep(10);
            timer = timer + .75;
        }
        else{
			create_drive_direct(-125,-250);
            msleep(10);
            timer = timer + .75;
        }
    }
          create_stop();
    	  msleep(500);
    while (analog(buldingSensor < 1200)){ 
        if (analog(leftLineSensor) > 1800 && analog(rightLineSensor) > 1800){
            create_drive_direct(-125,-125);
            msleep(10);
            timer = timer + 1;
        }
        else if (analog(leftLineSensor) > 1800 && analog(rightLineSensor) < 1800){
            create_drive_direct(0,-125);
            msleep(10);
            timer = timer + .25;
    	}
    	else if (analog(leftLineSensor) < 1800 && analog(rightLineSensor) > 1800) {
            create_drive_direct(-125,0);
            msleep(10);
            timer = timer + .25;
        }
        else{
			create_drive_direct(-65,-125);
            msleep(10);
            timer = timer + .9;
        }
    }
          create_stop();
   		
    	//check which buliding to deliver suplies too
    	set_servo_position(backArm,0);
    	camera_open_black();
    	msleep(1000);
    	while (timer < 50){
    		camera_update();
            msleep(2);
            timer = timer + 1;
        }
    	
        if (get_object_area(0,0) >=50) //turn if it sees an object 100
        {
           create_drive_direct(0,-200);
           msleep(800);
           create_drive_direct(-200,-200);
           msleep(2500);
           create_drive_direct(200,200);
           msleep(2500);
           create_drive_direct(0,200);
           msleep(800);
        }
    	else
        {
           create_drive_direct(-200,-200);
           msleep(1700);
           create_drive_direct(200,200);
           msleep(1700);
    	}
    camera_close();
    timer = 0;
    create_stop();
    
    //part 2: collect and sweep the people
    
    //get people
    create_spin_CCW(200);
    msleep(960);
    create_stop();
    
    set_servo_position(frontArm, 1250);
    msleep(250);
    set_servo_position(frontArm, 620);
    msleep(250);
    create_drive_direct(50,50);
    msleep(2750); //4000 3750 3650
    set_servo_position(frontArm, 125);
    msleep(250);
    create_drive_direct(-75,-75);
    msleep(6000);
    create_stop();
    msleep(1000);
    
    //loop to grab people
    while(i<3){
        set_servo_position(frontArm,1250);
        msleep(250);
        set_servo_position(frontArm,1790);
        msleep(250);
        create_drive_direct(-100,-100);
        msleep(2500);//1000
        create_drive_direct(100,100);
        msleep(1000);
        create_spin_CW(200);
        msleep(960);
        create_stop();
        create_drive_direct(200,200);
        msleep(1675); //2000 1750 1650 1700
        create_spin_CCW(200);
        msleep(960);
        create_stop();
        create_drive_direct(100,100);
        msleep(1000);
        set_servo_position(frontArm, 1250);
    	msleep(250);
    	set_servo_position(frontArm, 620);
    	msleep(250);
    	create_drive_direct(75,75);
    	msleep(6000);
    	set_servo_position(frontArm, 125);
    	msleep(250);
    	create_drive_direct(-75,-75);
    	msleep(6000);
    	create_stop();
    	msleep(1000);
        i++;
    }
    
    //end of the program
    create_disconnect();
	msleep(500);
    return 0;
}
