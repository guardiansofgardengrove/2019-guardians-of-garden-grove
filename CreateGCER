#include <kipr/botball.h>

int main()
{
    //intro
    create_connect();
    // REFERT TO THESE NUMBERS IF A CORD IS UMPLUGED //
    int frontArm = 1;
    int backArm = 0;
    int up = 0;
    int down = 1950;
    int lightSenser = 1;
    int leftLineSensor = 0;
    int rightLineSensor = 2;
    int timer = 0;
    msleep(2000); //get away from arms time
    set_servo_position(frontArm, 1790);
    set_servo_position(backArm, 0);
    set_create_distance(0);
    get_create_total_angle(0);
    //WAIT FOR LIGHT NEEDS TO BE ADDED HERE LATER
    enable_servos();
    shut_down_in(119);
    
    //programing info;
    
    
    //part 1: sweep the center line without people
    
    //get out of the starting box
    create_drive_direct(-100,-100);
    msleep(1000);
    while (get_create_distance() <= 150) {
    	create_drive_direct(300,300);
	}
    set_create_distance(0);
   	create_stop();

    //approach the start of the line
	while (get_create_total_angle() >= -101) { 
        create_drive_direct(200, -200);
    }
    set_create_total_angle(0);
    create_stop();
    
    //drive paralel to the starting line
    while (get_create_distance() <= 800) {
    	create_drive_direct(300,300);
	}
    set_create_distance(0);
   	create_stop();
    
    //turn to face of the line
	while (get_create_total_angle() >= -101) { 
        create_drive_direct(200,-200);
    }
    set_create_total_angle(0);
    create_stop();
    
    //check the gray and black line is passed before moving a bit farther to turn
    while (analog(rightLineSensor) < 2500){
        create_drive_direct(-100,-100);
    }
    create_stop();
    while (get_create_distance() >= -200) {
    	create_drive_direct(-100,-100);
	}
    set_create_distance(0);
    create_stop();

    //turn to prep for the line and camera code
	while (get_create_total_angle() <= 90) { 
        create_drive_direct(-200,200);
    }
    set_create_total_angle(0);
    create_stop();
    set_servo_position(backArm,down);
    msleep(500);
    
    //camera line follow
    while (timer < 40){ //to change time, add a zero to however many seconds you want it to double line follow
        if (analog(leftLineSensor) > 2500 && analog(rightLineSensor) > 2500){
            create_drive_direct(-250,-250);
            msleep(100);
            timer = timer + 1;
        }
        else if (analog(leftLineSensor) > 2500 && analog(rightLineSensor) < 2500){
            create_drive_direct(0,-250);
            msleep(100);
            timer = timer + .25;
    	}
    	else if (analog(leftLineSensor) < 2500 && analog(rightLineSensor) > 2500) {
            create_drive_direct(-250,0);
            msleep(100);
            timer = timer + .25;
        }
        else{
			create_drive_direct(-125,-250);
            msleep(100);
            timer = timer + .5;
        }
    }
          create_stop();
    	  timer = 0;
   
    	camera_open_black();
    	msleep(1000);
    	while (timer < 50){
    		camera_update();
            msleep(2);
            timer = timer + 1;
        }
    	
        if (get_object_area(0,0) >=50) //turn if it sees an object 100
        {
           create_drive_direct(0,-200);
           msleep(800);
           create_drive_direct(-200,-200);
           msleep(2500);
           create_drive_direct(200,200);
           msleep(2500);
           create_drive_direct(0,200);
           msleep(800);
        }
    	else
        {
           create_drive_direct(-200,-200);
           msleep(1700);
           create_drive_direct(200,200);
           msleep(1700);
    	}
    camera_close();
    timer = 0;
    create_stop();
    
    //end of the program
    create_disconnect();
	msleep(500);
    return 0;
}
